// converted by version 1.3
// on Sat Jun 05 14:13:13 ICT 2021

.package inputSV {
	.aid 0x25:0x10:0x19:0x99:0x1:0x0;
	.version 1.0;

	.imports {
		0xA0:0x0:0x0:0x0:0x62:0x1:0x1 1.2;		//javacard/framework
	}

	.applet {
		0x25:0x10:0x19:0x99:0x1:0x0:0x0 inputSV;
	}

	.constantPool {
		// 0
		staticMethodRef 0.3.0()V;		// javacard/framework/Applet.<init>()V
		// 1
		classRef inputSV;
		// 2
		staticMethodRef inputSV/<init>()V;
		// 3
		virtualMethodRef 0.3.2([BSB)V;		// javacard/framework/Applet.register([BSB)V
		// 4
		virtualMethodRef 0.3.3()Z;		// javacard/framework/Applet.selectingApplet()Z
		// 5
		virtualMethodRef 0.10.1()[B;		// javacard/framework/APDU.getBuffer()[B
		// 6
		virtualMethodRef 0.10.6()S;		// javacard/framework/APDU.setIncomingAndReceive()S
		// 7
		staticMethodRef 0.7.1(S)V;		// javacard/framework/ISOException.throwIt(S)V
		// 8
		staticFieldRef byte[] inputSV/OpData;
		// 9
		staticMethodRef 0.16.2([BS[BSS)S;		// javacard/framework/Util.arrayCopyNonAtomic([BS[BSS)S
		// 10
		staticFieldRef byte inputSV/lenData;
		// 11
		staticFieldRef byte inputSV/lenID;
		// 12
		staticFieldRef byte[] inputSV/OpID;
		// 13
		staticFieldRef byte inputSV/lenNAME;
		// 14
		staticFieldRef byte[] inputSV/OpNAME;
		// 15
		staticFieldRef byte inputSV/lenDATE;
		// 16
		staticFieldRef byte[] inputSV/OpDATE;
		// 17
		staticFieldRef byte[] inputSV/OpADDRESS;
		// 18
		staticFieldRef byte inputSV/lenADDRESS;
		// 19
		virtualMethodRef 0.10.7()S;		// javacard/framework/APDU.setOutgoing()S
		// 20
		virtualMethodRef 0.10.9(S)V;		// javacard/framework/APDU.setOutgoingLength(S)V
		// 21
		staticMethodRef 0.16.1([BS[BSS)S;		// javacard/framework/Util.arrayCopy([BS[BSS)S
		// 22
		virtualMethodRef 0.10.4(SS)V;		// javacard/framework/APDU.sendBytes(SS)V
	}

	.class public inputSV 0 extends 0.3 {		// extends javacard/framework/Applet

		.fields {
			public static byte[] OpData 0 = {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0};		// [B
			public static byte lenData 1;		// B
			public static byte[] OpID 2 = {0,0,0,0,0};		// [B
			public static byte[] OpNAME 3 = {0,0,0,0,0};		// [B
			public static byte[] OpDATE 4 = {0,0,0,0,0};		// [B
			public static byte[] OpADDRESS 5 = {0,0,0,0,0};		// [B
			public static byte lenID 6;		// B
			public static byte lenNAME 7;		// B
			public static byte lenDATE 8;		// B
			public static byte lenADDRESS 9;		// B
			private static final byte CLA = 0;		// B
			private static final byte INS_INPUT = 1;		// B
			private static final byte INS_OUTPUT = 2;		// B
			private static final byte OUT_ID = 1;		// B
			private static final byte OUT_NAME = 2;		// B
			private static final byte OUT_DATE = 3;		// B
			private static final byte OUT_ADDRESS = 4;		// B
			private static final byte OUT_ALL = 5;		// B
		}

		.publicMethodTable 7 {
			equals(Ljava/lang/Object;)Z;
			register()V;
			register([BSB)V;
			selectingApplet()Z;
			deselect()V;
			getShareableInterfaceObject(Ljavacard/framework/AID;B)Ljavacard/framework/Shareable;;
			select()Z;
			process(Ljavacard/framework/APDU;)V;
		}

		.packageMethodTable 0 {
		}

		.method public <init>()V 0 {
			.stack 1;
			.locals 0;

				L0:	aload_0;
					invokespecial 0;		// javacard/framework/Applet.<init>()V
					return;
		}

		.method public static install([BSB)V 1 {
			.stack 5;
			.locals 0;

				L0:	new 1;		// inputSV/inputSV
					dup;
					invokespecial 2;		// inputSV/inputSV.<init>()V
					aload_0;
					sload_1;
					sconst_1;
					sadd;
					aload_0;
					sload_1;
					baload;
					invokevirtual 3;		// javacard/framework/Applet.register([BSB)V
					return;
		}

		.method public process(Ljavacard/framework/APDU;)V 7 {
			.stack 6;
			.locals 5;

			.descriptor	Ljavacard/framework/APDU;	0.10;

				L0:	aload_0;
					invokevirtual 4;		// javacard/framework/Applet.selectingApplet()Z
					ifeq L2;
				L1:	return;
				L2:	aload_1;
					invokevirtual 5;		// javacard/framework/APDU.getBuffer()[B
					astore_2;
				L3:	aload_1;
					invokevirtual 6;		// javacard/framework/APDU.setIncomingAndReceive()S
					pop;
					aload_2;
					sconst_1;
					baload;
					slookupswitch L39 2 1 L4 2 L29;
				L4:	aload_2;
					sconst_4;
					baload;
					bspush 20;
					if_scmple L6;
				L5:	sspush 26368;
					invokestatic 7;		// javacard/framework/ISOException.throwIt(S)V
				L6:	aload_2;
					sconst_5;
					getstatic_a 8;		// reference inputSV/inputSV.OpData
					sconst_0;
					aload_2;
					sconst_4;
					baload;
					invokestatic 9;		// javacard/framework/Util.arrayCopyNonAtomic([BS[BSS)S
					pop;
					aload_2;
					sconst_4;
					baload;
					putstatic_b 10;		// byte inputSV/inputSV.lenData
					sconst_0;
					sstore_3;
				L7:	sconst_5;
					newarray 11;
					astore 4;
				L8:	sconst_0;
					sstore 5;
				L9:	sconst_0;
					sstore 6;
				L10:	sload 6;
					getstatic_b 10;		// byte inputSV/inputSV.lenData
					if_scmpgt_w L28;
				L11:	getstatic_a 8;		// reference inputSV/inputSV.OpData
					sload 6;
					baload;
					sconst_2;
					if_scmpne L13;
				L12:	sconst_1;
					sstore_3;
					goto_w L27;
				L13:	getstatic_a 8;		// reference inputSV/inputSV.OpData
					sload 6;
					baload;
					sconst_3;
					if_scmpne L15;
				L14:	sconst_0;
					sstore_3;
				L15:	sload_3;
					sconst_1;
					if_scmpne L17;
				L16:	aload 4;
					sload 5;
					getstatic_a 8;		// reference inputSV/inputSV.OpData
					sload 6;
					baload;
					bastore;
					sload 5;
					sconst_1;
					sadd;
					s2b;
					sstore 5;
					goto L27;
				L17:	sload_3;
					ifne L27;
				L18:	sload 5;
					ifeq L27;
				L19:	getstatic_b 11;		// byte inputSV/inputSV.lenID
					ifne L21;
				L20:	aload 4;
					sconst_0;
					getstatic_a 12;		// reference inputSV/inputSV.OpID
					sconst_0;
					sload 5;
					invokestatic 9;		// javacard/framework/Util.arrayCopyNonAtomic([BS[BSS)S
					pop;
					sload 5;
					putstatic_b 11;		// byte inputSV/inputSV.lenID
					sconst_5;
					newarray 11;
					astore 4;
					goto L26;
				L21:	getstatic_b 13;		// byte inputSV/inputSV.lenNAME
					ifne L23;
				L22:	aload 4;
					sconst_0;
					getstatic_a 14;		// reference inputSV/inputSV.OpNAME
					sconst_0;
					sload 5;
					invokestatic 9;		// javacard/framework/Util.arrayCopyNonAtomic([BS[BSS)S
					pop;
					sload 5;
					putstatic_b 13;		// byte inputSV/inputSV.lenNAME
					sconst_5;
					newarray 11;
					astore 4;
					goto L26;
				L23:	getstatic_b 15;		// byte inputSV/inputSV.lenDATE
					ifne L25;
				L24:	aload 4;
					sconst_0;
					getstatic_a 16;		// reference inputSV/inputSV.OpDATE
					sconst_0;
					sload 5;
					invokestatic 9;		// javacard/framework/Util.arrayCopyNonAtomic([BS[BSS)S
					pop;
					sload 5;
					putstatic_b 15;		// byte inputSV/inputSV.lenDATE
					sconst_5;
					newarray 11;
					astore 4;
					goto L26;
				L25:	aload 4;
					sconst_0;
					getstatic_a 17;		// reference inputSV/inputSV.OpADDRESS
					sconst_0;
					sload 5;
					invokestatic 9;		// javacard/framework/Util.arrayCopyNonAtomic([BS[BSS)S
					pop;
					sload 5;
					putstatic_b 18;		// byte inputSV/inputSV.lenADDRESS
				L26:	sconst_0;
					sstore 5;
				L27:	sinc 6 1;
					goto_w L10;
				L28:	goto_w L40;
				L29:	aload_2;
					sconst_2;
					baload;
					sconst_1;
					if_scmpne L31;
				L30:	aload_1;
					invokevirtual 19;		// javacard/framework/APDU.setOutgoing()S
					pop;
					aload_1;
					getstatic_b 11;		// byte inputSV/inputSV.lenID
					invokevirtual 20;		// javacard/framework/APDU.setOutgoingLength(S)V
					getstatic_a 12;		// reference inputSV/inputSV.OpID
					sconst_0;
					aload_2;
					sconst_0;
					getstatic_b 11;		// byte inputSV/inputSV.lenID
					invokestatic 21;		// javacard/framework/Util.arrayCopy([BS[BSS)S
					pop;
					aload_1;
					sconst_0;
					getstatic_b 11;		// byte inputSV/inputSV.lenID
					invokevirtual 22;		// javacard/framework/APDU.sendBytes(SS)V
					goto_w L40;
				L31:	aload_2;
					sconst_2;
					baload;
					sconst_2;
					if_scmpne L33;
				L32:	aload_1;
					invokevirtual 19;		// javacard/framework/APDU.setOutgoing()S
					pop;
					aload_1;
					getstatic_b 13;		// byte inputSV/inputSV.lenNAME
					invokevirtual 20;		// javacard/framework/APDU.setOutgoingLength(S)V
					getstatic_a 14;		// reference inputSV/inputSV.OpNAME
					sconst_0;
					aload_2;
					sconst_0;
					getstatic_b 13;		// byte inputSV/inputSV.lenNAME
					invokestatic 21;		// javacard/framework/Util.arrayCopy([BS[BSS)S
					pop;
					aload_1;
					sconst_0;
					getstatic_b 13;		// byte inputSV/inputSV.lenNAME
					invokevirtual 22;		// javacard/framework/APDU.sendBytes(SS)V
					goto_w L40;
				L33:	aload_2;
					sconst_2;
					baload;
					sconst_3;
					if_scmpne L35;
				L34:	aload_1;
					invokevirtual 19;		// javacard/framework/APDU.setOutgoing()S
					pop;
					aload_1;
					getstatic_b 15;		// byte inputSV/inputSV.lenDATE
					invokevirtual 20;		// javacard/framework/APDU.setOutgoingLength(S)V
					getstatic_a 16;		// reference inputSV/inputSV.OpDATE
					sconst_0;
					aload_2;
					sconst_0;
					getstatic_b 15;		// byte inputSV/inputSV.lenDATE
					invokestatic 21;		// javacard/framework/Util.arrayCopy([BS[BSS)S
					pop;
					aload_1;
					sconst_0;
					getstatic_b 15;		// byte inputSV/inputSV.lenDATE
					invokevirtual 22;		// javacard/framework/APDU.sendBytes(SS)V
					goto_w L40;
				L35:	aload_2;
					sconst_2;
					baload;
					sconst_4;
					if_scmpne L37;
				L36:	aload_1;
					invokevirtual 19;		// javacard/framework/APDU.setOutgoing()S
					pop;
					aload_1;
					getstatic_b 18;		// byte inputSV/inputSV.lenADDRESS
					invokevirtual 20;		// javacard/framework/APDU.setOutgoingLength(S)V
					getstatic_a 17;		// reference inputSV/inputSV.OpADDRESS
					sconst_0;
					aload_2;
					sconst_0;
					getstatic_b 18;		// byte inputSV/inputSV.lenADDRESS
					invokestatic 21;		// javacard/framework/Util.arrayCopy([BS[BSS)S
					pop;
					aload_1;
					sconst_0;
					getstatic_b 18;		// byte inputSV/inputSV.lenADDRESS
					invokevirtual 22;		// javacard/framework/APDU.sendBytes(SS)V
					goto_w L40;
				L37:	aload_2;
					sconst_2;
					baload;
					sconst_5;
					if_scmpne L40;
				L38:	aload_1;
					invokevirtual 19;		// javacard/framework/APDU.setOutgoing()S
					pop;
					aload_1;
					getstatic_b 18;		// byte inputSV/inputSV.lenADDRESS
					getstatic_b 15;		// byte inputSV/inputSV.lenDATE
					sadd;
					getstatic_b 11;		// byte inputSV/inputSV.lenID
					sadd;
					getstatic_b 13;		// byte inputSV/inputSV.lenNAME
					sadd;
					invokevirtual 20;		// javacard/framework/APDU.setOutgoingLength(S)V
					getstatic_a 12;		// reference inputSV/inputSV.OpID
					sconst_0;
					aload_2;
					sconst_0;
					getstatic_b 11;		// byte inputSV/inputSV.lenID
					invokestatic 21;		// javacard/framework/Util.arrayCopy([BS[BSS)S
					pop;
					getstatic_a 14;		// reference inputSV/inputSV.OpNAME
					sconst_0;
					aload_2;
					getstatic_b 11;		// byte inputSV/inputSV.lenID
					getstatic_b 13;		// byte inputSV/inputSV.lenNAME
					invokestatic 21;		// javacard/framework/Util.arrayCopy([BS[BSS)S
					pop;
					getstatic_a 16;		// reference inputSV/inputSV.OpDATE
					sconst_0;
					aload_2;
					getstatic_b 13;		// byte inputSV/inputSV.lenNAME
					getstatic_b 11;		// byte inputSV/inputSV.lenID
					sadd;
					getstatic_b 15;		// byte inputSV/inputSV.lenDATE
					invokestatic 21;		// javacard/framework/Util.arrayCopy([BS[BSS)S
					pop;
					getstatic_a 17;		// reference inputSV/inputSV.OpADDRESS
					sconst_0;
					aload_2;
					getstatic_b 15;		// byte inputSV/inputSV.lenDATE
					getstatic_b 13;		// byte inputSV/inputSV.lenNAME
					sadd;
					getstatic_b 11;		// byte inputSV/inputSV.lenID
					sadd;
					getstatic_b 18;		// byte inputSV/inputSV.lenADDRESS
					invokestatic 21;		// javacard/framework/Util.arrayCopy([BS[BSS)S
					pop;
					aload_1;
					sconst_0;
					getstatic_b 18;		// byte inputSV/inputSV.lenADDRESS
					getstatic_b 15;		// byte inputSV/inputSV.lenDATE
					sadd;
					getstatic_b 11;		// byte inputSV/inputSV.lenID
					sadd;
					getstatic_b 13;		// byte inputSV/inputSV.lenNAME
					sadd;
					invokevirtual 22;		// javacard/framework/APDU.sendBytes(SS)V
					goto L40;
				L39:	sspush 27904;
					invokestatic 7;		// javacard/framework/ISOException.throwIt(S)V
				L40:	return;
		}

	}

}
